import java.util.Scanner;

class BankAccount {
    private double balance;

    public BankAccount(double initialBalance) {
        balance = initialBalance;
    }

    public void deposit(double amount) {
        balance += amount;
    }

    public boolean withdraw(double amount) {
        if (amount > balance) {
            return false;
        }
        balance -= amount;
        return true;
    }

    public double checkBalance() {
        return balance;
    }
}

public class atm {
    private BankAccount userAccount;
    private Scanner scanner;

    public atm(BankAccount account) {
        userAccount = account;
        scanner = new Scanner(System.in);
    }

    private void displayOptions() {
        System.out.println("Welcome to the ATM!");
        System.out.println("1. Withdraw");
        System.out.println("2. Deposit");
        System.out.println("3. Check Balance");
        System.out.println("4. Exit");
    }

    private double validateAmount(String input) {
        try {
            double amount = Double.parseDouble(input);
            if (amount <= 0) {
                System.out.println("Invalid amount. Amount must be positive.");
                return -1;
            }
            return amount;
        } catch (NumberFormatException e) {
            System.out.println("Invalid amount. Please enter a valid number.");
            return -1;
        }
    }

    private void withdraw() {
        System.out.println("Enter the amount you want to withdraw:");
        String inputAmount = scanner.nextLine();
        double amount = validateAmount(inputAmount);
        if (amount < 0) {
            return;
        }

        if (userAccount.withdraw(amount)) {
            System.out.println("Withdrawal successful. Current balance: " + userAccount.checkBalance());
        } else {
            System.out.println("Insufficient balance.");
        }
    }

    private void deposit() {
        System.out.println("Enter the amount you want to deposit:");
        String inputAmount = scanner.nextLine();
        double amount = validateAmount(inputAmount);
        if (amount < 0) {
            return;
        }

        userAccount.deposit(amount);
        System.out.println("Deposit successful. Current balance: " + userAccount.checkBalance());
    }

    private void checkBalance() {
        System.out.println("Current balance: " + userAccount.checkBalance());
    }

    public void start() {
        while (true) {
            displayOptions();
            System.out.println("Enter your choice (1/2/3/4):");
            String choice = scanner.nextLine();
            switch (choice) {
                case "1":
                    withdraw();
                    break;
                case "2":
                    deposit();
                    break;
                case "3":
                    checkBalance();
                    break;
                case "4":
                    System.out.println("Thank you for using the ATM. Goodbye!");
                    scanner.close();
                    return;
                default:
                    System.out.println("Invalid choice. Please choose a valid option.");
            }
        }
    }

    public static void main(String[] args) {
        double initialBalance = 1000; // Set the initial balance for the user's account
        BankAccount userAccount = new BankAccount(initialBalance);
        atm atm = new atm(userAccount);
        atm.start();
    }
}
